version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: ai_lms_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: learning_assistant
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - ai_lms_network

  # AI Learning Assistant Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai_lms_backend
    restart: unless-stopped
    environment:
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/learning_assistant?authSource=admin
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - FLASK_ENV=production
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    networks:
      - ai_lms_network
    volumes:
      - ./backend:/app
      - /app/__pycache__

  # Frontend (Optional - if you want to serve it from Docker)
  frontend:
    image: nginx:alpine
    container_name: ai_lms_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - ai_lms_network

volumes:
  mongodb_data:
    driver: local

networks:
  ai_lms_network:
    driver: bridge 